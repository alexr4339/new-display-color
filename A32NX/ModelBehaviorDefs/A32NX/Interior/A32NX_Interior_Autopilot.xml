<ModelBehaviors>

    <!--
    Template for the LOC button on the FCU.

    Should probably be replaced by a generic template at some point.
    -->
    <Template Name="FBW_Airbus_Autopilot_Push_Localiser">
        <DefaultTemplateParameters>
            <DEFAULT_NAME>Localizer</DEFAULT_NAME>
            <HELPID>HELPID_AUTOPILOT_NAV_HOLD</HELPID>
            <TOOLTIPID>%((A:AUTOPILOT APPROACH HOLD, Bool) (A:AUTOPILOT GLIDESLOPE HOLD, Bool) ! and)%{if}TT:COCKPIT.TOOLTIPS.AUTOPILOT_PANEL_LOC_ON%{else}TT:COCKPIT.TOOLTIPS.AUTOPILOT_PANEL_LOC_OFF%{end}</TOOLTIPID>
        </DefaultTemplateParameters>

        <UseTemplate Name="ASOBO_AUTOPILOT_Push_Template">
            <LEFT_SINGLE_CODE>
                (* If approach hold is on and glideslope hold is on, toggle localiser hold ? *)

                (A:AUTOPILOT APPROACH HOLD, Bool) (A:AUTOPILOT GLIDESLOPE HOLD, Bool) and if{
                    (&gt;K:AP_LOC_HOLD)
                }

                (* We send that K event again ??? Not sure what the logic is here... *)

                (&gt;K:AP_LOC_HOLD)

                (L:#PLANE_NAME#_AUTOPILOT_LAST_APPR_MODE, Bool) 1 != if{
                    (* Mode was undefined or appr, we set to loc *)

                    1 (&gt;L:#PLANE_NAME#_AUTOPILOT_LAST_APPR_MODE)
                } els{
                    (* Mode was loc, we set to undefined *)

                    0 (&gt;L:#PLANE_NAME#_AUTOPILOT_LAST_APPR_MODE)
                }
            </LEFT_SINGLE_CODE>
            <EMISSIVE_CODE_ACTIVE>(L:#PLANE_NAME#_AUTOPILOT_LAST_APPR_MODE, Number) 0 ==</EMISSIVE_CODE_ACTIVE>
        </UseTemplate>
    </Template>

    <!--
    Template for the APPR button on the FCU.

    Should probably be replaced by a generic template at some point.
    -->
    <Template Name="FBW_Airbus_Autopilot_Push_Approach">
        <DefaultTemplateParameters>
            <DEFAULT_NAME>Approach</DEFAULT_NAME>
            <HELPID>HELPID_AUTOPILOT_APP_HOLD</HELPID>
            <TOOLTIPID>%((A:AUTOPILOT APPROACH HOLD, Bool) (A:AUTOPILOT GLIDESLOPE HOLD, Bool) and)%{if}TT:COCKPIT.TOOLTIPS.AUTOPILOT_PANEL_APR_ON%{else}TT:COCKPIT.TOOLTIPS.AUTOPILOT_PANEL_APR_OFF%{end}</TOOLTIPID>
        </DefaultTemplateParameters>

        <UseTemplate Name="ASOBO_AUTOPILOT_Push_Template">
            <LEFT_SINGLE_CODE>
                (* If approach hold is on and glideslope hold is not off, toggle approach hold ? *)

                (A:AUTOPILOT APPROACH HOLD, Bool) (A:AUTOPILOT GLIDESLOPE HOLD, Bool) ! and if{
                    (&gt;K:AP_APR_HOLD)
                }

                (* We send that K event again ??? Not sure what the logic is here... *)

                (&gt;K:AP_APR_HOLD)

                (L:#PLANE_NAME#_AUTOPILOT_LAST_APPR_MODE, Bool) 2 &lt;= if{
                    (* Mode was undefined or loc, we set to appr *)

                    2 (&gt;L:#PLANE_NAME#_AUTOPILOT_LAST_APPR_MODE)
                } els{
                    (* Mode was appr, we set to undefined *)

                    0 (&gt;L:#PLANE_NAME#_AUTOPILOT_LAST_APPR_MODE)
                }
            </LEFT_SINGLE_CODE>
            <EMISSIVE_CODE_ACTIVE>(L:#PLANE_NAME#_AUTOPILOT_LAST_APPR_MODE, Number) 1 ==</EMISSIVE_CODE_ACTIVE>
        </UseTemplate>
    </Template>

</ModelBehaviors>