<ModelBehaviors>

    <!--
    Template for defining continuous knobs with lower and upper bounds

    Main Parameters:
            - ANIM_SIMVAR           <no default>        The name of the simvar to use for the knob
            - ANIM_SIMVAR_UNITS     Default: "percent"  The simvar units
            - ANIM_SIMVAR_MIN       Default: 0          The lower bound of the position
            - ANIM_SIMVAR_MAX       Default: 100        The upper bound of the position
            - INCREMENT             Default: 1          The increment for each click / hold update

    Authors: Benjamin Dupont (@Benjozork) 10/10/20
    -->
    <Template Name="FBW_Continuous_Knob_Finite_From_Simvar">
        <DefaultTemplateParameters>
            <ANIM_SIMVAR_UNITS>percent</ANIM_SIMVAR_UNITS>
            <ANIM_SIMVAR_MIN>0</ANIM_SIMVAR_MIN>
            <ANIM_SIMVAR_MAX>100</ANIM_SIMVAR_MAX>
            <INCREMENT>1</INCREMENT>
            <EXTRA_INTERACTION/>
            <ANIMREF_ID>0</ANIMREF_ID>
            <ANIMTIP_0_ON_CURSOR>TurnLeft</ANIMTIP_0_ON_CURSOR>
            <ANIMTIP_1_ON_CURSOR>TurnRight</ANIMTIP_1_ON_CURSOR>
            <ANIMTIP_0></ANIMTIP_0>
            <ANIMTIP_1></ANIMTIP_1>
            <ANIM_LAG>30</ANIM_LAG>
            <ANIM_WRAP>True</ANIM_WRAP>
        </DefaultTemplateParameters>

        <UseTemplate Name = "ASOBO_GT_Anim_Code">
            <ANIM_CODE>
                (#ANIM_SIMVAR#, #ANIM_SIMVAR_UNITS#) #ANIM_SIMVAR_MIN# - #ANIM_SIMVAR_MAX# #ANIM_SIMVAR_MIN# - / 100 *
            </ANIM_CODE>
        </UseTemplate>

        <UseTemplate Name = "ASOBO_GT_Interaction_WheelAndContinuousLeft#EXTRA_INTERACTION#">
            <UPDATE_FREQUENCY>40</UPDATE_FREQUENCY>

            <CLOCKWISE_CODE>
                (#ANIM_SIMVAR#, #ANIM_SIMVAR_UNITS#) #INCREMENT# + #ANIM_SIMVAR_MAX# min (&gt;#ANIM_SIMVAR#)
            </CLOCKWISE_CODE>
            <ANTICLOCKWISE_CODE>
                (#ANIM_SIMVAR#, #ANIM_SIMVAR_UNITS#) #INCREMENT# - #ANIM_SIMVAR_MIN# max (&gt;#ANIM_SIMVAR#)
            </ANTICLOCKWISE_CODE>
        </UseTemplate>

        <Condition Valid="WWISE_EVENT">
            <UseTemplate Name = "ASOBO_GT_AnimTriggers_SoundEvents_Same">
            </UseTemplate>
        </Condition>
    </Template>

    <!--
    Template for rigging uncovered push buttons

    Takes into account the value of L:XMLVAR_SWITCH_OVHD_INTLT_ANNLT_Position.

    Main Parameters:
           - TOGGLE_NODE_ID        <no default>    Switch node ID   (anim name will be same)
           - TOGGLE_SIMVAR         <no default>    SimVar to contain the toggle state
           - SEQ1_CODE             0               Sequence 1 emissive code
           - SEQ1_CODE             0               Sequence 2 emissive code

    Authors: Benjamin Dupont (@Benjozork) 12/10/20
    -->
    <Template Name="FBW_Push_Toggle">
        <UseTemplate Name="ASOBO_GT_Push_Button_Airliner">
            <NODE_ID>#TOGGLE_NODE_ID#</NODE_ID>
            <ANIM_NAME>#TOGGLE_NODE_ID#</ANIM_NAME>

            <WWISE_EVENT_1>apu_generator_switch_on</WWISE_EVENT_1>
            <WWISE_EVENT_2>apu_generator_switch_off</WWISE_EVENT_2>
            <NORMALIZED_TIME_1>0.1</NORMALIZED_TIME_1>
            <NORMALIZED_TIME_2>0.5</NORMALIZED_TIME_2>

            <LEFT_SINGLE_CODE>
                (#TOGGLE_SIMVAR#, Bool) ! (&gt;#TOGGLE_SIMVAR#)
            </LEFT_SINGLE_CODE>

            <Condition Valid="SEQ1_CODE">
                <True>
                    <SEQ1_EMISSIVE_CODE>#SEQ1_CODE# (L:XMLVAR_SWITCH_OVHD_INTLT_ANNLT_Position) 0 == or</SEQ1_EMISSIVE_CODE>
                </True>
                <False>
                    <SEQ1_EMISSIVE_CODE>(L:XMLVAR_SWITCH_OVHD_INTLT_ANNLT_Position) 0 ==</SEQ1_EMISSIVE_CODE>
                </False>
            </Condition>

            <Condition Valid="SEQ2_CODE">
                <True>
                    <SEQ2_EMISSIVE_CODE>#SEQ2_CODE# (L:XMLVAR_SWITCH_OVHD_INTLT_ANNLT_Position) 0 == or</SEQ2_EMISSIVE_CODE>
                </True>
                <False>
                    <SEQ2_EMISSIVE_CODE>(#TOGGLE_SIMVAR#, Bool) (L:XMLVAR_SWITCH_OVHD_INTLT_ANNLT_Position) 0 == or</SEQ2_EMISSIVE_CODE>
                </False>
            </Condition>
        </UseTemplate>
    </Template>

    <!--
    Template for rigging covered push buttons

    Takes into account the value of L:XMLVAR_SWITCH_OVHD_INTLT_ANNLT_Position.

    Main Parameters:
           - TOGGLE_NODE_ID     <no default>    Switch node ID                              (anim name will be same)
           - LOCK_NODE_ID       <no default>    Lock node ID                                (anim name will be same)
           - TOGGLE_SIMVAR      <no default>    SimVar to contain the toggle state
           - SEQ1_CODE          0               Sequence 1 emissive code
           - SEQ1_CODE          0               Sequence 2 emissive code
           - INVERTED           False           Whether or not the switch is OFF by default

    Authors: Benjamin Dupont (@Benjozork) 11/10/20
    -->
    <Template Name="FBW_Covered_Push_Toggle">
        <UseTemplate Name="ASOBO_GT_Switch_Dummy">
            <NODE_ID>#LOCK_NODE_ID#</NODE_ID>
            <ANIM_NAME>#LOCK_NODE_ID#</ANIM_NAME>
            <WWISE_EVENT_1>apu_generator_switch_on</WWISE_EVENT_1>
            <WWISE_EVENT_2>apu_generator_switch_off</WWISE_EVENT_2>
            <LEFT_SINGLE_CODE>(#TOGGLE_SIMVAR#_LOCK) ! (&gt;#TOGGLE_SIMVAR#_LOCK)</LEFT_SINGLE_CODE>
        </UseTemplate>

        <UseTemplate Name="ASOBO_GT_Push_Button_Airliner">
            <NODE_ID>#TOGGLE_NODE_ID#</NODE_ID>
            <ANIM_NAME>#TOGGLE_NODE_ID#</ANIM_NAME>

            <WWISE_EVENT_1>apu_generator_switch_on</WWISE_EVENT_1>
            <WWISE_EVENT_2>apu_generator_switch_off</WWISE_EVENT_2>
            <NORMALIZED_TIME_1>0.1</NORMALIZED_TIME_1>
            <NORMALIZED_TIME_2>0.5</NORMALIZED_TIME_2>

            <LEFT_SINGLE_CODE>
                (#TOGGLE_SIMVAR#, Bool) ! (&gt;#TOGGLE_SIMVAR#)
            </LEFT_SINGLE_CODE>

            <Condition Check="SEQ1_CODE">
                <True>
                    <SEQ1_EMISSIVE_CODE>#SEQ1_CODE# (L:XMLVAR_SWITCH_OVHD_INTLT_ANNLT_Position) 0 == or</SEQ1_EMISSIVE_CODE>
                </True>
                <False>
                    <SEQ1_EMISSIVE_CODE>(L:XMLVAR_SWITCH_OVHD_INTLT_ANNLT_Position) 0 ==</SEQ1_EMISSIVE_CODE>
                </False>
            </Condition>

            <Condition Check="SEQ2_CODE">
                <True>
                    <SEQ2_EMISSIVE_CODE>#SEQ2_CODE# (L:XMLVAR_SWITCH_OVHD_INTLT_ANNLT_Position) 0 == or</SEQ2_EMISSIVE_CODE>
                </True>
                <False>
                    <Condition Check="INVERTED">
                        <True>
                            <SEQ2_EMISSIVE_CODE>(#TOGGLE_SIMVAR#, Bool) ! (L:XMLVAR_SWITCH_OVHD_INTLT_ANNLT_Position) 0 == or</SEQ2_EMISSIVE_CODE>
                        </True>
                        <False>
                            <SEQ2_EMISSIVE_CODE>(#TOGGLE_SIMVAR#, Bool) (L:XMLVAR_SWITCH_OVHD_INTLT_ANNLT_Position) 0 == or</SEQ2_EMISSIVE_CODE>
                        </False>
                    </Condition>
                </False>
            </Condition>
        </UseTemplate>
    </Template>

    <!--
    Template for defining panel lighting knobs tied to potentiometers

    Main Parameters:
            - NODE_ID           <no default>    The knob node ID
            - ANIM_NAME         <no default>    The knob animation name
            - POTENTIOMETER     <no default>    The potentiometer index

    Authors: Benjamin Dupont (@Benjozork) 12/10/20
    -->
    <Template Name="FBW_Lighting_Knob_With_Potentiometer">
        <DefaultTemplateParameters>
            <PART_ID>#NODE_ID#</PART_ID>
            <ANIM_WRAP>0</ANIM_WRAP>
            <ANIMREF_ID>0</ANIMREF_ID>
            <ANIMTIP_0>TT:COCKPIT.TOOLTIPS.LIGHTING_KNOB_PANEL_DECREASE</ANIMTIP_0>
            <ANIMTIP_0_ON_CURSOR>TurnLeft</ANIMTIP_0_ON_CURSOR>
            <ANIMTIP_1>TT:COCKPIT.TOOLTIPS.LIGHTING_KNOB_PANEL_INCREASE</ANIMTIP_1>
            <ANIMTIP_1_ON_CURSOR>TurnRight</ANIMTIP_1_ON_CURSOR>
        </DefaultTemplateParameters>

        <UseTemplate Name="ASOBO_LIGHTING_Knob_SubTemplate">
        </UseTemplate>
    </Template>

</ModelBehaviors>