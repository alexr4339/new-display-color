name: PR
on:
  pull_request:
    types:
      - opened
      - synchronize
      - reopened
      - ready_for_review

jobs:
  lint:
    runs-on: ubuntu-latest
    if: github.event.pull_request.draft == false
    steps:
      - name: Checkout source
        uses: actions/checkout@v2
      - name: install
        run: npm install --no-optional
      - name: npm run lint
        run: ./scripts/dev-env/run.sh npm run lint
      - name: lint-rust.sh
        run: |
          docker run --rm -v "$(pwd)":/external ghcr.io/flybywiresim/dev-env@sha256:0bf0844b914cbd45a8a0a866a71c7a07fa09308f48cb961708be479f0d63aa0f scripts/lint-rust.sh
  test:
    runs-on: ubuntu-latest
    if: github.event.pull_request.draft == false
    steps:
      - name: Checkout source
        uses: actions/checkout@v2
      - name: test-rust.sh
        run: |
          docker run --rm -v "$(pwd)":/external ghcr.io/flybywiresim/dev-env@sha256:0bf0844b914cbd45a8a0a866a71c7a07fa09308f48cb961708be479f0d63aa0f scripts/test-rust.sh
  build:
    runs-on: ubuntu-latest
    if: github.event.pull_request.draft == false
    env:
      CDN_DIR: /flybywiresim/addons/a32nx/vmaster/
    steps:
      - name: Checkout source
        uses: actions/checkout@v2
      - name: Build A32NX
        run: |
          ./scripts/dev-env/run.sh ./scripts/setup.sh
          ./scripts/dev-env/run.sh ./scripts/build.sh
      - name: Generate zip files
        run: |
          ./scripts/dev-env/run.sh node ./scripts/fragment.js

          mkdir tmp_A32NX
          mv A32NX tmp_A32NX/
          mv tmp_A32NX A32NX
      - uses: actions/upload-artifact@v2
        with:
          name: A32NX
          path: A32NX
      - name: Upload to Bunny CDN
        uses: SamKirkland/FTP-Deploy-Action@2.0.0
        with:
          FTP_SERVER: ${{ secrets.BUNNY_BUCKET_HOST }}
          PORT: ${{ secrets.BUNNY_BUCKET_PORT }}
          FTP_USERNAME: ${{ secrets.BUNNY_BUCKET_USERNAME }}
          FTP_PASSWORD: ${{ secrets.BUNNY_BUCKET_PASSWORD }}
          LOCAL_DIR: ./build-modules/
          REMOTE_DIR: ${{ env.CDN_DIR }}
          ARGS: --delete
